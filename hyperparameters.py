# -*- coding: utf-8 -*-
"""Hyperparameters

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wI2nTUG0xvqfWADqOD04y1iOgcPUAT3W

OBJECTIVE:

Train a model with default hyperparameters, evaluate it perfomance , and manually adjust a few hyperparameters to observe their impact on results.
"""

from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
import pandas as pd

#load the dataset

data = load_iris()

X, y = data.data, data.target

#split dataset
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

#display dataset info

print(f"Features Names : {data.feature_names}")
print(f"Target Names : {data.target_names}")

# import libraries

from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report

# train random forest with default hypeparameters

rf_default = RandomForestClassifier()
rf_default.fit(X_train, y_train)
rf_default_pred = rf_default.predict(X_test)
rf_default_accuracy = accuracy_score(y_test, rf_default_pred)
print(f"Default Random Forest Accuracy : {rf_default_accuracy}")

classification_report_result = classification_report(y_test, rf_default_pred)
print(f"Classification Report : \n{classification_report_result}")

# with adjusted parameters

rf_adjusted = RandomForestClassifier(
    n_estimators=200,
    max_depth =5,
    random_state=42)

rf_adjusted.fit(X_train, y_train)
rf_adjusted_pred = rf_adjusted.predict(X_test)
rf_adjusted_accuracy = accuracy_score(y_test, rf_adjusted_pred)
print(f"Adjusted Random Forest Accuracy : {rf_adjusted_accuracy}")
classification_report_result_adjusted = classification_report(y_test, rf_adjusted_pred)
print(f"Clasification Report : {classification_report_result_adjusted}")