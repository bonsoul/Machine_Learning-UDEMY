# -*- coding: utf-8 -*-
"""cross_validation

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_h5vi-_6qsmO9HEZjnz29VdsdtASKpUF
"""



"""Cross-Validation : Statistical method used to evaluate the perfomance of a model by partitioning the data into training and validation subsets multiple times.

// Helps ensure that te model's perfomance generalizes weel to unseen data

Why Cross-Validation:
1. Prevents Overfitting
2.Reliable Perfomance Estimate
3.Optimizes Model Selection

Types of Cross-Validation

K-Fold Crosss-Validation - Splits the datasets into K equal-sized folds.
Best for general purpose datasets.

Stratified K-Fold Cross Validation - Ensures that each fold maintains the same class distribution as te original dataset.
 Best For : Classification tasks with imbalanced data.

Leave One Out Cross-Validation (LOOCV) - Uses a single data point as the validation set and the rest as the traing set

Pros -Maximizes training data each fold.
Cons - Computationally expensive for large datasets.
"""

import pandas as pd
from sklearn.model_selection import train_test_split, cross_val_score, KFold, StratifiedKFold
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report

#load the dataset
url = "https://storage.googleapis.com/download.tensorflow.org/data/creditcard.csv"
df = pd.read_csv(url)

df.info()

df['Class'].value_counts()

X = df.drop(columns=['Class'])
y = df['Class']

#split the dataset
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

#initiate K-Fold

kfold = KFold(n_splits=5, shuffle=True, random_state=42)

rf_model = RandomForestClassifier()
scores_kfold = cross_val_score(rf_model, X_train, y_train, cv=kfold, scoring='accuracy')

print(f'K-fold cross validation  scores: {scores_kfold}')
print(f"Mean Accuracy: {scores_kfold.mean():.2f}")

# initialize Strartified K-Fold

skfold = StratifiedKFold(n_splits=5, shuffle=True, random_state=42)

scores_stratified = cross_val_score(rf_model, X_train, y_train, cv=skfold, scoring='accuracy')

print(f'Stratified K-fold cross validation scores: {scores_stratified}')
print(f"Mean Accuracy : {scores_stratified.mean():.2f}")